- name: Запуск iperf3 с разным количеством потоков
  hosts: host1  # Запускаем сервер iperf3 на host1
  vars:
    iperf_duration: 1  # Время выполнения команд iperf3
  tasks:
    - name: Запустить iperf3 сервер на порту 5201
      command: iperf3 -s -p 5201 -D
      async: 10
      poll: 0
      # Запускаем сервер iperf3 на порту 5201 в фоновом режиме

    - name: Запустить iperf3 сервер на порту 5202
      command: iperf3 -s -p 5202 -D
      async: 10
      poll: 0
      # Запускаем сервер iperf3 на порту 5202 в фоновом режиме

    - name: Запустить iperf3 сервер на порту 5203
      command: iperf3 -s -p 5203 -D
      async: 10
      poll: 0
      # Запускаем сервер iperf3 на порту 5203 в фоновом режиме

    - name: Запустить iperf3 сервер на порту 5204
      command: iperf3 -s -p 5204 -D
      async: 10
      poll: 0
      # Запускаем сервер iperf3 на порту 5204 в фоновом режиме

    - name: Запустить iperf3 сервер на порту 5205
      command: iperf3 -s -p 5205 -D
      async: 10
      poll: 0
      # Запускаем сервер iperf3 на порту 5205 в фоновом режиме

- name: Выполнить iperf3 с разным количеством потоков
  hosts: host2  # Клиент iperf3 на ubuntu2
  vars:
    iperf_duration: 1  # Время выполнения команд iperf3
  tasks:
    - name: Подождать, пока сервер запустится
      wait_for:
        host: "{{ hostvars['host1']['ansible_host'] }}"  # Используем IP из инвентарного файла
        port: 5201
        timeout: 10
      # Ждем, пока сервер iperf3 на порту 5201 не станет доступен

    - name: Выполнить iperf3 с 1 потоком (1-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 1 -t "{{ iperf_duration }}"
      register: iperf3_result_1_1
      # Запускаем iperf3 клиент с 1 потоком на порту 5201
    - debug:
        msg: "{{ iperf3_result_1_1.stdout | regex_findall('.*sender.*') }}"
      # Выводим результаты первого прогона

    - name: Выполнить iperf3 с 1 потоком (2-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 1 -t "{{ iperf_duration }}"
      register: iperf3_result_1_2
      # Запускаем iperf3 клиент с 1 потоком на порту 5201
    - debug:
        msg: "{{ iperf3_result_1_2.stdout | regex_findall('.*sender.*') }}"
      # Выводим результаты второго прогона

    - name: Выполнить iperf3 с 1 потоком (3-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 1 -t "{{ iperf_duration }}"
      register: iperf3_result_1_3
      # Запускаем iperf3 клиент с 1 потоком на порту 5201
    - debug:
        msg: "{{ iperf3_result_1_3.stdout | regex_findall('.*sender.*') }}"
      # Выводим результаты третьего прогона

    - name: Подсчитать среднюю скорость передачи с 1 потоком (Gbits/sec)
      set_fact:
        avg_speed_1_gbits: "{{ ((iperf3_result_1_1.stdout | regex_search('([0-9.]+) Gbits/sec.*sender') | regex_replace('[^0-9.]', '') | float) +
                                (iperf3_result_1_2.stdout | regex_search('([0-9.]+) Gbits/sec.*sender') | regex_replace('[^0-9.]', '') | float) +
                                (iperf3_result_1_3.stdout | regex_search('([0-9.]+) Gbits/sec.*sender') | regex_replace('[^0-9.]', '') | float)) / 3 }}"

    - name: Подсчитать среднее переданное количество данных (GBytes)
      set_fact:
        avg_transfer_1_gbytes: "{{ ((iperf3_result_1_1.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float) +
                                     (iperf3_result_1_2.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float) +
                                     (iperf3_result_1_3.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float)) / 3 }}"

    - name: Подсчитать среднее количество ретрансляций с 1 потоком
      set_fact:
        avg_retransmissions: "{{ ((iperf3_result_1_1.stdout | regex_search('([0-9]+) +sender') | regex_replace('[^0-9]', '') | int) +
                                  (iperf3_result_1_2.stdout | regex_search('([0-9]+) +sender') | regex_replace('[^0-9]', '') | int) +
                                  (iperf3_result_1_3.stdout | regex_search('([0-9]+) +sender') | regex_replace('[^0-9]', '') | int)) / 3 }}"

    - debug:
        msg:
          - "Средняя скорость передачи с 1 потоком: {{ avg_speed_1_gbits | float | round(1) }} Gbits/sec"
          - "Среднее переданное количество данных с 1 потоком: {{ avg_transfer_1_gbytes | float | round(1) }} GBytes"
          - "Среднее количество ретрансляций с 1 потоком: {{ avg_retransmissions }}"


    - name: Выполнить iperf3 с 2 потоками (1-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 2 -t "{{ iperf_duration }}"
      register: iperf3_result_2_1
      # Запускаем iperf3 клиент с 2 потоками на порту 5201
    - debug:
        msg: "{{ iperf3_result_2_1.stdout | regex_findall('.*\\[SUM\\].*sender.*') }}"
      # Выводим результаты первого прогона

    - name: Выполнить iperf3 с 2 потоками (2-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 2 -t "{{ iperf_duration }}"
      register: iperf3_result_2_2
      # Запускаем iperf3 клиент с 2 потоками на порту 5201
    - debug:
        msg: "{{ iperf3_result_2_2.stdout | regex_findall('.*\\[SUM\\].*sender.*') }}"
      # Выводим результаты второго прогона

    - name: Выполнить iperf3 с 2 потоками (3-й прогон)
      command: iperf3 -c "{{ hostvars['host1']['ansible_host'] }}" -p 5201 -P 2 -t "{{ iperf_duration }}"
      register: iperf3_result_2_3
      # Запускаем iperf3 клиент с 2 потоками на порту 5201
    - debug:
        msg: "{{ iperf3_result_2_3.stdout | regex_findall('.*\\[SUM\\].*sender.*') }}"
      # Выводим результаты третьего прогона

    - name: Подсчитать среднюю скорость передачи с 2 потоками (Gbits/sec)
      set_fact:
        avg_speed_2_gbits: "{{ ((iperf3_result_2_1.stdout | regex_search('.*\\[SUM\\].*sender.*') | regex_search('([0-9\\.]+) Gbits/sec', '\\1') | first | float) +
                                (iperf3_result_2_2.stdout | regex_search('.*\\[SUM\\].*sender.*') | regex_search('([0-9\\.]+) Gbits/sec', '\\1') | first | float) +
                                (iperf3_result_2_3.stdout | regex_search('.*\\[SUM\\].*sender.*') | regex_search('([0-9\\.]+) Gbits/sec', '\\1') | first | float)) / 3 }}"

    - name: Подсчитать среднее переданное количество данных с 2 потоков (GBytes)
      set_fact:
        avg_transfer_2_gbytes: "{{ ((iperf3_result_2_1.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float) +
                                     (iperf3_result_2_2.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float) +
                                     (iperf3_result_2_3.stdout | regex_search('([0-9.]+) GBytes.*sender') | regex_replace(' GBytes.*', '') | float)) / 3 }}"


    - debug:
        msg:
          - "Средняя скорость передачи с 2 потоками: {{ avg_speed_2_gbits | float | round(1) }} Gbits/sec"
